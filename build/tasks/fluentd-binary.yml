---

- name: fluentd-binary | Install required packages and libraries
  become: yes
  apt:
    name: ['cmake', 'libcap-ng-dev', '{{ruby_version}}', '{{rubydev_version}}', 'build-essential', '{{ libjemalloc_version }}']
    update_cache: yes

- name: fluentd-binary | Install fluentd gem
  become: yes
  community.general.gem:
    name: fluentd
    state: present
    version: "{{ fluentd.version }}"
    norc: yes
    user_install: no
  notify: restart fluentd

- name: fluentd-binary | Install fluentd plugin from rubygems
  become: yes
  community.general.gem:
    name: "{{ item }}"
    state: present
    version: "{{ fluentd.plugins.rubygems[item].version }}"
    norc: yes
    user_install: no
  with_items: "{{ fluentd.plugins.rubygems.keys() | list }}"
  when: "fluentd.plugins.rubygems is defined and fluentd.plugins.rubygems and fluentd.plugins.rubygems | type_debug == 'dict'"
  notify: restart fluentd

- block:
    - name: fluentd-binary | create temporary git build directory
      become: yes
      tempfile: { state: directory, suffix: gitBuildTMP }
      register: tmp_build_dir

    - name: fluentd-binary | get fluentd plugin from git
      become: yes
      git:
        repo: "{{ fluentd.plugins.source[item].git.repo }}"
        version: "{{ fluentd.plugins.source[item].git.version | default(HEAD)}}"
        dest: "{{ tmp_build_dir.path }}/{{item}}"
      with_items: "{{ fluentd.plugins.source.keys() | list }}"

    - name: fluentd-binary | build and install fluentd plugin from git
      become: yes
      shell: "gem uninstall {{item}}; gem build {{item}}.gemspec; sudo gem install {{item}}-*.gem"
      args:
        chdir: "{{ tmp_build_dir.path }}/{{item}}"
      with_items: "{{ fluentd.plugins.source.keys() | list }}"
      notify: restart fluentd
  when: "fluentd.plugins.source is defined and fluentd.plugins.source and fluentd.plugins.source | type_debug == 'dict'"