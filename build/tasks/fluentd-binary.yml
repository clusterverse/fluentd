---

- name: fluentd-binary | Install required packages and libraries
  become: true
  apt:
    name: ['cmake', 'libcap-ng-dev', '{{ruby_version}}', '{{rubydev_version}}', 'build-essential', '{{ libjemalloc_version }}']
    update_cache: true

- name: fluentd-binary | Install fluentd gem
  become: true
  community.general.gem:
    name: fluentd
    state: present
    version: "{{ fluentd.version }}"
    norc: true
    user_install: false
  notify: restart fluentd

- name: fluentd-binary | Install fluentd plugin from rubygems
  become: true
  community.general.gem:
    name: "{{ item }}"
    state: present
    version: "{{ fluentd.plugins.rubygems[item].version }}"
    norc: true
    user_install: false
  with_items: "{{ fluentd.plugins.rubygems.keys() | list }}"
  when: "fluentd.plugins.rubygems is defined and fluentd.plugins.rubygems and fluentd.plugins.rubygems | type_debug == 'dict'"
  notify: restart fluentd

- block:
    - name: fluentd-binary | create temporary git build directory
      become: true
      tempfile: { state: directory, suffix: gitBuildTMP }
      register: tmp_build_dir

    - name: fluentd-binary | copy SSH key for git
      become: true
      copy:
        src: "{{ fluentd.plugins.source[item].git.ssh_key__file | default(omit) }}"
        content: "{{ fluentd.plugins.source[item].git.ssh_key__text | default(omit) }}"
        dest: "{{ tmp_build_dir.path }}/{{item}}__ssh_key"
        mode: '0600'
      register: copied_ssh_key
      when: "fluentd.plugins.source[item].git.ssh_key__file is defined or fluentd.plugins.source[item].git.ssh_key__text is defined"
      with_items: "{{ fluentd.plugins.source.keys() | list }}"

    - name: fluentd-binary | get fluentd plugin from git
      become: true
      git:
        repo: "{{ fluentd.plugins.source[item].git.repo }}"
        version: "{{ fluentd.plugins.source[item].git.version | default(HEAD)}}"
        dest: "{{ tmp_build_dir.path }}/{{item}}"
        accept_newhostkey: true
        key_file: "{{ copied_ssh_key.results | json_query(\"[?item==`\" + item + \"`].dest | [0]\") | default(omit) }}"
      with_items: "{{ fluentd.plugins.source.keys() | list }}"

    - name: fluentd-binary | build and install fluentd plugin from git
      become: true
      shell: "gem uninstall {{item}}; gem build {{item}}.gemspec; sudo gem install {{item}}-*.gem"
      args:
        chdir: "{{ tmp_build_dir.path }}/{{item}}"
      with_items: "{{ fluentd.plugins.source.keys() | list }}"
      notify: restart fluentd

    - name: fluentd-binary | remove temporary git build directory
      become: true
      file:
        path: "{{ tmp_build_dir.path }}"
        state: absent
  when: "fluentd.plugins.source is truthy and fluentd.plugins.source | type_debug == 'dict'"