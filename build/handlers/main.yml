---

## Restart fluentd nodes serially in-turn, ensuring each node is *really* back up (i.e. ports are open) before restarting the next (ensures zero-downtime).
## This custom action plugin is a compromise, but there is apparently no alternative; see https://github.com/ansible/ansible/issues/80374
- name: restart fluentd
  become: true
  dseeley.tasks_serial.tasks_serial:
    tasks: "{{_templated_tasks | from_yaml }}"
  vars:
    _templated_tasks: |
      - name: service
        args:
          name: fluentd
          state: restarted
          enabled: true
      {% for source in fluentd.conffile.sources_multi_worker %}
      {% if 'port' in source and ('config' not in source or 'config' in source and 'transport udp' not in source.config) %}
      - name: wait_for
        args:
          host: localhost
          port: {{ source.port }}
          timeout: 60
      {% endif %}
      {% endfor %}
  throttle: 1


- name: restart keepalived
  become: true
  service:
    name: keepalived
    enabled: true
    state: restarted
